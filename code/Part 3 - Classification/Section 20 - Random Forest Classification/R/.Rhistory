setwd("~/Develop/AI/ML/udemy-machinelearning-a-z-python-and-r/code/Part 3 - Classification/Section 19 - Decision Tree Classification/R")
source('~/Develop/AI/ML/udemy-machinelearning-a-z-python-and-r/code/Part 3 - Classification/Section 19 - Decision Tree Classification/R/classification_template.R', echo=TRUE)
source('~/Develop/AI/ML/udemy-machinelearning-a-z-python-and-r/code/Part 3 - Classification/Section 19 - Decision Tree Classification/R/classification_template.R', echo=TRUE)
source('~/Develop/AI/ML/udemy-machinelearning-a-z-python-and-r/code/Part 3 - Classification/Section 19 - Decision Tree Classification/R/classification_template.R', echo=TRUE)
source('~/Develop/AI/ML/udemy-machinelearning-a-z-python-and-r/code/Part 3 - Classification/Section 19 - Decision Tree Classification/R/classification_template.R', echo=TRUE)
source('~/Develop/AI/ML/udemy-machinelearning-a-z-python-and-r/code/Part 3 - Classification/Section 19 - Decision Tree Classification/R/classification_template.R', echo=TRUE)
source('~/Develop/AI/ML/udemy-machinelearning-a-z-python-and-r/code/Part 3 - Classification/Section 19 - Decision Tree Classification/R/classification_template.R', echo=TRUE)
setwd("~/Develop/AI/ML/udemy-machinelearning-a-z-python-and-r/code/Part 3 - Classification/Section 20 - Random Forest Classification/R")
source('~/Develop/AI/ML/udemy-machinelearning-a-z-python-and-r/code/Part 3 - Classification/Section 20 - Random Forest Classification/R/CopyOfrandom_forest_classification.R', echo=TRUE)
source('~/Develop/AI/ML/udemy-machinelearning-a-z-python-and-r/code/Part 3 - Classification/Section 20 - Random Forest Classification/R/CopyOfrandom_forest_classification.R', echo=TRUE)
plot(classifier)
set = test_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid(X1, X2)
colnames(grid_set) = c('Age', 'EstimatedSalary')
y_grid = predict(classifier, grid_set)
plot(set[, -3], main = 'Random Forest Classification (Test set)',
xlab = 'Age', ylab = 'Estimated Salary',
xlim = range(X1), ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2)), add = TRUE)
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
